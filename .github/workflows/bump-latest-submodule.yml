name: "Bump Latest Submodule on PR Comment"
on:
  issue_comment:
    types: [created]
jobs:
  bump_latest_submodule:
    name: Bump Latest Submodule
    if: github.event.issue.pull_request != '' && contains(github.event.comment.body, '/bump:')
    runs-on: ubuntu-latest
    steps:
      - name: Parse action command
        id: parse_action_command
        run: |
          DELIMITER=':'
          DEFAULT_SUBMODULE_BRANCH='master'
          
          readarray -d $DELIMITER -t SPLITTED_COMMANDS <<< ${{ github.event.comment.body }}

          COMMANDS_LENGTH=${#SPLITTED_COMMANDS[@]}
          
          COMMAND=${SPLITTED_COMMANDS[0]}
          SUBMODULE_PATH=${SPLITTED_COMMANDS[1]}
          SUBMODULE_BRANCH=${SPLITTED_COMMANDS[2]}

          if [ $COMMAND != '/bump' ]; then
            echo "Error: Invalid command $COMMAND"
            exit 1
          elif [ -z $SUBMODULE_PATH ]; then
            echo 'Error: No submodule path provided'
            exit 1
          elif [ -z $SUBMODULE_BRANCH ]; then
            echo "No submodule branch provided - using default branch $DEFAULT_SUBMODULE_BRANCH"
            SUBMODULE_BRANCH=$DEFAULT_SUBMODULE_BRANCH
          elif [ $COMMANDS_LENGTH = 4 ]; then
            SUBMODULE_REMOTE=${SPLITTED_COMMANDS[2]}
            SUBMODULE_BRANCH=${SPLITTED_COMMANDS[3]}
            echo "Bumping $SUBMODULE_BRANCH branch from remote $SUBMODULE_REMOTE"
          fi
          echo "##[set-output name=submodule_path;]$SUBMODULE_PATH"
          echo "##[set-output name=submodule_remote;]$SUBMODULE_REMOTE"
          echo "##[set-output name=submodule_branch;]$SUBMODULE_BRANCH"
      - name: Fetch latest code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACTIONS_PAT }}
          fetch-depth: 0
          submodules: 'true'
      - name: Fetch PR source branch name
        id: fetch_pr_and_target_branch
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { issue, repository } = context.payload;
            const [ owner, repo ] = repository.full_name.split('/');
            const { data: pullRequest } = await github.pulls.get({
              owner,
              repo,
              pull_number: issue.number
            });
            const { ref: prBranch } = pullRequest.head;
            const { ref: baseBranch } = pullRequest.base;
            const { clone_url: prRemoteUrl } = pullRequest.head.repo;
            console.log(`##[set-output name=repo_owner;]${owner}`);
            console.log(`##[set-output name=pr_branch;]${prBranch}`);
            console.log(`##[set-output name=pr_remote_url;]${prRemoteUrl}`);
            console.log(`##[set-output name=base_branch;]${baseBranch}`); 
      - name: Bump submodule
        env:
          REPO_OWNER: ${{ steps.fetch_pr_and_target_branch.outputs.repo_owner }}
          PR_BRANCH: ${{ steps.fetch_pr_and_target_branch.outputs.pr_branch }}
          PR_REMOTE_URL: ${{ steps.fetch_pr_and_target_branch.outputs.pr_remote_url }}
          BASE_BRANCH: ${{ steps.fetch_pr_and_target_branch.outputs.base_branch }}
          SUBMODULE_PATH: ${{ steps.parse_action_command.outputs.submodule_path }}
          SUBMODULE_REMOTE: ${{ steps.parse_action_command.outputs.submodule_remote }}
          SUBMODULE_BRANCH: ${{ steps.parse_action_command.outputs.submodule_branch }}
          GIT_USER_NAME: 'github-actions[bot]'
          GIT_USER_EMAIL: '41898282+github-actions[bot]@users.noreply.github.com'
        run: |
          git remote add pr_remote $PR_REMOTE_URL
          git fetch pr_remote
          git checkout $PR_BRANCH

          cd $SUBMODULE_PATH
          if [ ! -z $SUBMODULE_REMOTE ]; then
            SUBMODULE_ORIGINAL_URL=$(git config --file ../.gitmodules --get submodule.$SUBMODULE_PATH.url)
            SUBMODULE_REMOTE_URL=${SUBMODULE_ORIGINAL_URL/$REPO_OWNER/$SUBMODULE_REMOTE}
            git remote add bump_remote $SUBMODULE_REMOTE_URL
            git fetch bump_remote
          fi
          git checkout $SUBMODULE_BRANCH
          
          cd ..
          git add $SUBMODULE_PATH
          git config user.name $GIT_USER_NAME
          git config user.email $GIT_USER_EMAIL
          git commit -m "Bump branch $SUBMODULE_BRANCH from submodule $SUBMODULE_PATH"
          git merge $BASE_BRANCH --no-edit
          git push
